import { UxModalService } from '@aurelia-ux/modal';
import { Container } from 'aurelia-framework';
import { DicoModel } from '../../models';
import { HttpClient } from 'aurelia-fetch-client';
import { SwissdataGlobal } from './../../helpers/swissdata-global';
export declare class Dico {
    private container;
    private modalService;
    private http;
    model: typeof DicoModel;
    suffix: string;
    items: Array<DicoModel>;
    sortingOptions: string[];
    limit: number;
    skip: number;
    currentCount?: number;
    search: string;
    sort: string;
    private nbElements;
    private contexts;
    private selectedContexts;
    private canEdit;
    global: SwissdataGlobal;
    constructor(container: Container, modalService: UxModalService, http: HttpClient);
    activate(): void;
    init(): Promise<void>;
    private fetchNbDico;
    private fetchContexts;
    private fetchingItems;
    fetchItems(): Promise<any>;
    getMoreItems(_scrollContext: any): Promise<void>;
    private searchTimeout;
    searchChanged(): void;
    sortChanged(): void;
    selectedContextsChanged(): void;
    openAddDicoDialog(): Promise<void>;
    openEditDicoDialog(dico: DicoModel): Promise<void>;
    addUserWhereMissing(): Promise<any>;
    addCertifiedTag(): Promise<any>;
    getKeysWithoutHumanTranslation(): Promise<DicoModel[]>;
    autoTranslate(): Promise<void>;
    requestGoogleTranslation(text: string, target: 'de' | 'fr' | 'it' | 'en', original?: 'de' | 'fr' | 'it' | 'en'): Promise<string>;
}
