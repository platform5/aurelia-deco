import { AppState } from '../../state/index';
import { SwissdataApi } from '../../helpers/swissdata-api';
import { UserModel } from '../../models/user.model';
import { ValidationController } from 'aurelia-validation';
import { I18N } from 'aurelia-i18n';
export declare class SwissdataUserField {
    private swissdataApi;
    private element;
    private validationController;
    private i18n;
    private log;
    instance: UserModel | 'state';
    property: 'email' | 'mobile' | 'password';
    private _instance;
    private currentPassword;
    private newPassword;
    private email;
    private mobile;
    private token;
    private code;
    constructor(swissdataApi: SwissdataApi, element: Element, validationController: ValidationController, i18n: I18N);
    bind(): void;
    instanceChanged(): void;
    propertyChanged(): void;
    private initField;
    private processProperty;
    updatePassword(): Promise<void>;
    requestEmailChange(): Promise<void>;
    validateEmailChange(): Promise<void>;
    cancelEmailChange(): void;
    requestMobileChange(): Promise<void>;
    cancelMobileChange(): void;
    validateMobileChange(): Promise<void>;
    sendEmailCodeAgain(): void;
    sendMobileCodeAgain(): void;
    private updateStateUserWithInstance;
    private notify;
    get mobileNumberExemple(): string;
}
export declare function updateUser(state: AppState, user: UserModel, properties: Array<string> | string): AppState;
