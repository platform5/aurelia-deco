import { TypeDecorator } from './type-decorator';
export declare let anyDecorator: TypeDecorator;
export declare const any: (optionsOrTarget?: any, key?: string, descriptor?: PropertyDescriptor) => any;
export declare let idDecorator: TypeDecorator;
export declare const id: (optionsOrTarget?: any, key?: string, descriptor?: PropertyDescriptor) => any;
export declare let validateString: (value: any, options?: any) => boolean;
export declare let stringDecorator: TypeDecorator;
export declare const string: (optionsOrTarget?: any, key?: string, descriptor?: PropertyDescriptor) => any;
export declare let selectDecorator: TypeDecorator;
export declare const select: (optionsOrTarget?: any, key?: string, descriptor?: PropertyDescriptor) => any;
export declare let validateInteger: (value: any) => boolean;
export declare let integerDecorator: TypeDecorator;
export declare const integer: (optionsOrTarget?: any, key?: string, descriptor?: PropertyDescriptor) => any;
export declare let validateBoolean: (value: any) => boolean;
export declare let booleanDecorator: TypeDecorator;
export declare const boolean: (optionsOrTarget?: any, key?: string, descriptor?: PropertyDescriptor) => any;
export declare let fromApiDate: (value: any, dateFormat?: string) => any;
export declare let toApiDate: (value: any, dateFormat?: string) => any;
export declare let validateDate: (value: any) => boolean;
export declare let dateDecorator: TypeDecorator;
export declare const date: (optionsOrTarget?: any, key?: string, descriptor?: PropertyDescriptor) => any;
export declare let validateFloat: (value: any) => boolean;
export declare let floatDecorator: TypeDecorator;
export declare const float: (optionsOrTarget?: any, key?: string, descriptor?: PropertyDescriptor) => any;
